VPC : Virtual Private Cloud : Networking part in AWS.. 

Public IP : Unique across the globe. (Internet) : 
Private IP : unique with in the network. (internal) : 

IPv4 : 32 bit : 2^32
IPv6 : 128 bit : 2^128

Class A : 0.0.0.0 - 126.255.255.255		(0-126)
Class B : 128.0.0.0 - 191.255.255.255	(128-191)
Class C : 192.0.0.0 - 223.255.255.255	(192-223)

Class D : 224.0.0.0 - 239.255.255.255 : Broadcosting/multicasting
Class E : 240.0.0.0 - 255.255.255.255 : R&D

127 : loopback / localhost 

10 laptops : ENable internal communication : Using private IP addresses won;t cost us anything.

Class A : 10.0.0.0 - 10.255.255.255 
Class B : 172.16.0.0 - 172.31.255.255
Class C : 192.168.0.0 - 192.168.255.255

ipconfig /all : Windows
ifconfig (or) ip addr : Linux

Network : groups interconnected hosts, which can communicate each other.
Host : Device we have with in network.


How many networks we required.?
How many hosts you required in each network.?


Class A : N.H.H.H : 127 Networks, Each network supports 16M hosts. 
Class B : N.N.H.H : 16,000 Networks, Each network supports 65,000 Hosts
Class C : N.N.N.H : 2M Networks, Each network supports 256 Hosts.

N.N.N.H : 
192.168.0.(0-255) : 192.168.0. 1/2/3/4/5 .. 255
192.168.1.(0-255) : 192.168.1. 1/2/3/4/5 .. 255
192.168.2.(0-255) : 192.168.2. 1/2/3/4/5 .. 255


As AWS reservs 5 IPs.. 

/32 ==> 32-32=0 -> 2^0 = 1
/31 ==> 32-31=1 -> 2^1 = 2
/30 ==> 32-30=2 -> 2^2 = 4
/28 ==> 32-28=4 -> 2^4 = 16 -5 = 11 Usable IPs
/24 ==> 32-24=8 -> 2^8 = 256 - 5 = 251 Usable IPs
/23 ==> 32-23=9 -> 2^9 = 512 - 5 = 507 Usable IPs
/16 ==> 32-16=16 -> 2^16 = 65536 - 5 = 65531 Usable IPs
 
____________

In reguar networks, 2 IPs are reserved.. We cannot use these (First Ip/Network id and last ip/Broadcost ip)
In AWS, AWS Reserves three more IPs.. Total 5 IPs are not usable.. 
--> 2 regular network (Network ID and Broadcost ID)
--> 2 for DNS servers
--> 1 Future use

192.168.0.0/16

/32		--> 32-32=0	2^0 = 1
/31		--> 32-31=1  2^1 = 2
/30		--> 32-30=2	2^2 = 4

/32		/31		/30		/29		/28		/27		/26		/25		/24	..	/16			/0
2^0		2^1		2^2		2^3		2^4		2^5		2^6		2^7		2^8		2^16		2^32
1		2		4		8		16		32		64		128		256		65536		4M

/24 : Usable IPs : ..??

32-24 = 8 = 2^8 = 256 - 5 = 251 Usable IPs

==> AWS supports Min /28 SUbnet.. Maximum /16 Subnet.

Minimum : 32-28 = 4 ==> 2^4 = 16 IPs - 5 reserved = 11 Usable IPs
Maximum : 32-16 = 16 ==> 2^16 = 65536 - 5 reserved = 65531 Usable IPs

https://www.davidc.net/sites/default/subnets/subnets.html

_____________________________________________________________________________________


VPC : Virtual Private Cloud : Region specific service.. 
VPC Peering : Enable communication between multiple vpc


CIDR : Classless InterDomain Routing : 
--> How big network we required. 
--> How many instances/ resources, we gonna launch. (predict)

Public Subnet : Internet facing subnet.. :
Private Subnet : Non-Internet facing subnet.. : 

How big VPC we required.?	300 Instance	Ans : /23 (512 = 512-5 = 507 Usable IPs) (192.168.0.0/23)
How many subnets we required within the VPC..?		Ans : 2
How many public SUbnets required within vpc..?		Ans : 1 (192.168.0.0/25)
How many private SUbnets required within vpc.?		Ans : 1 (192.168.0.128/25)
Are you going to create any subnets in future.?		Ans : Yes (Have some IPs for future use).
													(192.168.1.0/25, 192.168.1.128/25)

ap-south-1a : Public
ap-south-1b : private

SUbnet : ap-south-1a : subnet1 & Subnet 2

Public Subnet : Internet facing.. : ELB, Jump/ Bastian Host.. 
Private Subnet : DBs, Application, Web servers.. 

Step 1 : Create a VPC.
	VPC Name : CustomVPC		VPC CIDR : 192.168.0.0/20

Step 2 : Create Subnets within CustomVPC. 

Name : Public Subnet 1a : ap-south-1a : 192.168.0.0/23
Name : Public Subnet 1b : ap-south-1b : 192.168.2.0/23
Name : Private SUbnet 1a : ap-south-1a : 192.168.4.0/23
Name : Private Subnet 1b : ap-south-1b : 192.168.6.0/23

Step 3 : Create an Internet Gateway and associate with CustomVPC.
--> One VPC can contains one IGW.

Step 4 : Create RouteTables and Associate appropriate Subnets, add required routes.

--> PublicRoute : Go to SUbnet Association and choose "Public SUbnet". Navigate to Routes and add a route via IGW. 	 (0.0.0.0/0 --> IGW)

--> PrivateRoute : Go to SUbnet Association and choose "Private SUbnet". (DONT ADD INTERNET GATEWAY).

Step 5 (Optional) : Navigate to Subnets, Choose "Public SUbnet", Actions, "Modify auto assign public ip settings", Enable.


JUMP Server / Bastian Host : Is a Dedicated EC2 instance, Runs in CustomVPC PUblicSUbnet and can be used to connect to all the "Private Subnet" ec2 instances.

___________

Task : Create a VPC with 2 Subnets. (1 Public SUbnets and 1 Private Subnets)
1 Public SUbnets (ap-south-1a)
1 Private SUbnets (ap-south-1b)
___

Task : Create a VPC with 4 Subnets. (2 Public SUbnets and 2 Private Subnets)
2 Public SUbnets (ap-south-1a, ap-south-1b)
2 Private SUbnets (ap-south-1a, ap-south-1b)

Task 2 : draw.io website and design this diagram.
https://app.diagrams.net/?splash=0&libs=aws4

____________

PublicRoute : We need to associate InternetGateway. 
PrivateRoute without internet : Don't add NAT.
PrivateRoute With Intenet : Create NAT Gateway and add NAT Gateway.


_________________


VPC NAT Gateway (NO FREE TIER ELIGIBILITY): Is designed to provide Internet to private Subnet resources. NAT always runs in custom VPCs public subnet. We need to generate an EIP (Elastic IP). 

Private subnet ec2 instances want to access something from internet / endpoint hosted over the internet / patching purpose it needs internet. 

--> Make sure your edit PrivateRoute, and add an entry with 0.0.0.0/0 via NAT gateway.

____

NAT Instance : Now a days we are not using it.  It is an ec2 instance runs in custom vpcs public subnet, provides internet to private subnet resources.  (TEST IT)

--> We need to takes  care about the Security groups.
--> Source/destination check must be disabled.

--> Make sure your edit PrivateRoute, and add an entry with 0.0.0.0/0 via NAT Instance.

____________________________________________________________________________________

Enable Logging on VPC : 
Flow Logs: We can enable flowlogs at 
--> VPC Level
--> Subnet Level
--> Instance Level

We can choose destination as 1. S3 bucket 2. Cloudwatch Logs groups.

_____________

NACL : Network Access Control List : We can allow/deny traffic at Subnet level/AZ level using this NACLs.
--> We need to takes care about the inbound rules and outbound rules.
--> one subnet can be member of one NACL at a time.

--> Default NACLs, : all subnets member of this. It allows all the traffic.
--> New NACLs won't allow any traffic, Defaultly deny everything.  

--> Ephemeral ports / Temporary ports need to opened in NACL. 
https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html#nacl-ephemeral-ports

--> Lowest rule number will have highest permissions. 

_______________________________________________________________________________________


Endpoints : Private Links : It provides private connectivity to the resources. If we have any requirement, s3 rwquests/dynamodb req should not flow over the internet. 

NAT Gateway Works with IPv4. 
If our VPC is configured to use IPv6, Instead of NAT Gateway, We use "Egress Only Internet Gateways".


Can we associate multiple CIDRs for our VPC.
Yes.. 

_________________


VPC Peering : Allow us to enable communication between multiple VPCs. (Same region, DIff region, Diff AWS accout VPCs)

--> Requester VPC and Accepter VPC should not have same CIDR range.
--> VPC Peering is non transitive peering. 
--> Update both the VPCs route tables with Another VPC CIDR blocks via Peering connection. 

			Requester VPC (mumbai)				Accepeter VPC (Singapore)
VPC CIDR	192.168.0.0/23						10.0.0.0/24
VPC ID		vpc-0242075aec19241fd				vpc-0283b48dda2ad7574
Region		ap-south-1							ap-southeast-1
ACC ID		501170964283						501170964283


8 Subnets in environment : 2 Public, 2 application (private), 2 Lambda (private), 2 Database/data (private)

VPN Connectivity (openvpn): https://www.youtube.com/watch?v=JSTyjISscNg
Transit Gateway : https://www.youtube.com/watch?v=xyLlMBHy2wc



Site-to-site vpn settings

1. Create Virtual private gateway.
2. Create Customer Gateway. You need to provide your corporate office Public IP address which is confired in Firewall.
3. Using the Step 1 and step 2 resource and configure the Site to site vpn. Download the configuration and share it with Firewall team.


Task ; Practice entire VPC (except NAT gateway : Use NAT Instance)



