RDS : Relational Database Service : 6 Relational db engines.
--> Amazon Aurora	(Mysql Compatable / Postgresql Compatable)
--> MySQL
--> MS SQL	
--> PostgreSQL
--> MariaDB
--> Oracle

NoSQL database : IN AWS DynamoDB is a Serverless architecture.
--> DynamoDB : 

Caching solution for DynamoDB : DAX (DynamoDB Accelerator)
Caching for RDS : Elasticache (2 Open SOurce caching engines)
	--> MemcacheD
	--> Redis

DMS : Database Migration Service

Homogenious Migration : OnPrem MYSQL --> DMS Cluster --> AWS RDS MYSQL
Heterogenious migration : OnPrem DB2 --> SCT --> DMS Cluster --> AWS RDS MYSQL

--> Similar to Mongodb, AWS have a service "Document db". 

______

ec2 instance --> OS Level --> Install anything --> We have to take care below things.
Licensing..??
UPgradations..?? 
Backup..??
HA/FT..??

RDS --> Everything managed by AWS.

--> We won't get any choice to login to OS level.

GUI tools to manage the Databases : 
--> Amazon Aurora : Mysql Workbench / pgadmin
--> MySQL	: Mysql Workbench
--> MS SQL	: ssms (Microsoft Sql Server Management Studio)
--> PostgreSQL	: pgadmin
--> MariaDB	: workbench
--> Oracle	: oracle tool, Toad


Create a DB Subnet Group, Add 2 private subnets from Diff AZs (ap-south-1a & ap-south-1b private Subntes).. 

Endpoint Name / Hostname : my-first-mysql-rdsdb.cfpgnjehw330.ap-south-1.rds.amazonaws.com
admin
Avinash1234

nslookup my-first-mysql-rdsdb.cfpgnjehw330.ap-south-1.rds.amazonaws.com ==> to know IP of RDS.


Enable Public Access : Yes.. DB can be accesable over the internet, We can install tools in local device and connect. 
NO : The DB instance will be available to the resources running in same VPC.


--> DB ENgine 
--> Define Username and password (admin & custom/autogenerated)
--> Storage option
--> VPC 

Version : -2 / -1 mechanism.. We don't go with latest version. 
Free Tier : Choose this
Credentials : Define Username and password (admin & custom/autogenerated)
DB Instance class : db.t2.micro
Storage : Min 20gb, Max: 16TB	: 20 GB (Free Tier)

Storage Autoscaling : AWS will add storage automatically when the existing size is 80%.
	--> 10% of existing storage
	--> 5 GB .. WHich ever is higher, AWS choose it.

COnnectivity : 
VPC : Default/CustomVPC
Public Access : YES/No
Port : 3306

Automatic Backup : AWS creates backups automatically.  : Disable
0 --> disable
1 --> Min 
35 --> Max
7 --> Defualt Value

--> We will get DB Endpoint to connect to db instance. We won't get any IP address for this db instances. 


Task 1 : Launch an Mysql RDS db instance in CUstomVPCs Private SUbnet. Launch an ec2 instance in custom VPC Public Subnet and Install Mysql workbench then connect to the RDS db instance.  

Task 2 : Restore the shared sample db to the rds instance. 

_________________________________________________________________________________________


MultiAZ Deployment : Designed for Failover/FT purpose. : Creates a standby in a different Availability Zone (AZ) to provide data redundancy, eliminate I/O freezes, and minimize latency spikes during system backups.

 192.168.1.241
 

Automated Backup : This feature creates backup copies of our RDS instances automatically.  Based on retention period, we can have backup copies in our aws env to restore. 
Disable : 0 
Min : 1 Day
Max : 35 Days

--> When we are launching db instance, it creates a backup copy automatically, if this feature is enabled. 

7 Days : AWS keeps last 7 days backup copies. 


Enhanced Monitoring : 1 Sec
Basic Monitoring : 5 Min

____

We have "Read Replica" option for scaling purpose. It works with "Master-Slave" mechanism.

Role : Instance   ||   Primary & Replica

Primary : Supports read and write
Replica : Supports only read operations

_________________

Manual Snapshots : We can create snapshots manually. These won't delete along with rds db instance.  We need to delete manually.

Automated/system snapshots : AWS creates these, We cannot delete these.


RDS won't work on In-Place restoration. Restoration happens as a new rds db instance with new endpoint.

percona xtra backup

Restore to point in time : You are creating a new DB instance from a source DB instance at a specified time.

___

Task 1 : https://aws.amazon.com/getting-started/hands-on/amazon-efs-backup-and-restore-using-aws-backup/?trk=gs_card

Task 2 : https://aws.amazon.com/getting-started/hands-on/amazon-ebs-backup-and-restore-using-aws-backup/?trk=gs_card

____________________________________________________________________________________


Aurora DB : No Free tier eligibility

Provisioned : You provision and manage the server instance sizes.
Serverless : You specify the minimum and maximum amount of resources needed, and Aurora scales the capacity based on database load. This is a good option for intermittent or unpredictable workloads.

tier 0 > tier 1 > tier 1 > ... > tier 15

Max capacity for Aurora : 128TB of storage.. Remaining rds db engines supports 16 TB only.

_____

Dynamodb : nosql database : Serverless architecture. : Single-digit millisecond latency at any scale. 

Now you can select, insert, update, and delete data in DynamoDB. using ad hoc PartiQL queries.

https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html

{
Name : Avinash,
Contact : 1111,
address : 
	{	
	street : 1,
	area : k
	},
}

DAX : Dynamodb accelarator : in-Memory caching solution for DynamoDB.

__________________

https://docs.microsoft.com/en-us/dotnet/architecture/cloud-native/relational-vs-nosql-data#:~:text=Relational%20databases%20provide%20a%20store%20of%20related%20data%20tables.&text=Instead%20of%20joining%20tables%20of,of%20a%20single%20database%20partition.
___________________

Elasticache : In-Memory caching solution for RDS service. It have 2 open source caching engines. 
--> MemcacheD
--> Redis

Amazon DocumentDB : MongoDB compatable database. 

__________________

Task : 
https://aws.amazon.com/getting-started/hands-on/create-nosql-table/

Developers:
Task 4:
https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TicTacToe.html

________________

Task : launch an rds mysql db instance-1.. Now export/restore the shared db... 

Launch another rds mysql db instance-2.. Migrate all the datbases and tables from Db instance-1 to db instance-2 Using DMS (Database Migration service).

1. Launch a DMS cluster
2. Create endpoints (Source and destination) and test the endpoints
3. Create a replciation job and verify.

https://www.youtube.com/watch?v=iRhJDGp-ew8

_________________

Task : launch an ec2 instance in mumbai region.. connect to it and make it as webserver.. 

Use AWS Application Migration Service (MGN) and migrate the Mumbai region ec2 instance to "Sydney" region and verify webpage.

https://www.youtube.com/watch?v=fIEwoFaXExQ

__________________


TASK 2 : https://aws.amazon.com/getting-started/hands-on/deploy-wordpress-with-amazon-rds/

Task 5 : https://aws.amazon.com/getting-started/hands-on/migrate-rdsmysql-to-auroramysql/?trk=gs_card (No free tier)


Homegenious : mysql --> DMS --> AWS RDS Mysql
heterogenious : IBm DB2 --> SCT (Schema Convertion tool) --> DMS --> AWS RDS Mysql/aurora



Step 1 : create a DMS cluster (dms.t2.micro)
Step 2 : Create source endpoint (Create an RDS cluster, and restore the DATAbase), test the connectivity to DMS cluster
Step 3 ; Create a Target endpoint (Create a new rds cluster) test the connectivity to DMS cluster

Step 4 : Create a Migration task using Source and target endpoints (step 2 and 3)

migrate existing data. one time.
Migrate changes only. only changes migrates.
Migrate existing and continue migration. 


How to connect to Redshift : 
https://docs.aws.amazon.com/redshift/latest/mgmt/connecting-using-workbench.html
Tool Name : sql workbencj/J.


OLAP : Online Analytical process : Redshift
OLTP : Online Transactional process : RDS

leader node : Designed to run query on compute nodes.
Compute Node : it stores actual data


Amazon Neptune : Fast, reliable graph database
Amazon DocumentDB : MongoDB compatibility
